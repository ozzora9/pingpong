{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\by_95\\\\Desktop\\\\2024\\\\Web_Programming\\\\ReBread\\\\pingpong\\\\frontend\\\\src\\\\pages\\\\MapPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Maps from \"../components/Maps\";\nimport MapList from \"../components/MapList\";\nimport \"../styles/MapList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapPage = ({\n  storeList\n}) => {\n  _s();\n  const [selectedItem, setSelectedItem] = useState();\n  // const [center, setCenter] = useState({\n  //   lat: 37.4919681,\n  //   lng: 126.5813687,\n  // });\n  // const [currentLocation, setCurrentLocation] = useState();\n\n  // useEffect(() => {\n  //   if (navigator.geolocation) {\n  //     navigator.geolocation.getCurrentPosition(\n  //       (position) => {\n  //         const { latitude, longitude } = position.coords;\n  //         setCenter({ lat: latitude, lng: longitude });\n  //         setCurrentLocation({ lat: latitude, lng: longitude });\n  //       },\n  //       (error) => {\n  //         console.error(\"현재 위치를 가져올 수 없습니다.\", error);\n  //       }\n  //     );\n  //   } else {\n  //     console.error(\"위치 정보를 지원하지 않는 브라우저입니다.\");\n  //   }\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(MapList, {\n      list: storeList,\n      onSelectItem: setSelectedItem\n      // setCenter={setCenter}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Maps, {\n      list: storeList,\n      selectedItem: selectedItem\n      // center={center}\n      // setCenter={setCenter}\n      // currentLocation={currentLocation}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(MapPage, \"diAST2z1eLvM0kRpE8WPzCpgBqY=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["useEffect","useState","Maps","MapList","jsxDEV","_jsxDEV","MapPage","storeList","_s","selectedItem","setSelectedItem","style","display","children","list","onSelectItem","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/by_95/Desktop/2024/Web_Programming/ReBread/pingpong/frontend/src/pages/MapPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Maps from \"../components/Maps\";\r\nimport MapList from \"../components/MapList\";\r\nimport \"../styles/MapList.css\";\r\n\r\nconst MapPage = ({ storeList }) => {\r\n  const [selectedItem, setSelectedItem] = useState();\r\n  // const [center, setCenter] = useState({\r\n  //   lat: 37.4919681,\r\n  //   lng: 126.5813687,\r\n  // });\r\n  // const [currentLocation, setCurrentLocation] = useState();\r\n\r\n  // useEffect(() => {\r\n  //   if (navigator.geolocation) {\r\n  //     navigator.geolocation.getCurrentPosition(\r\n  //       (position) => {\r\n  //         const { latitude, longitude } = position.coords;\r\n  //         setCenter({ lat: latitude, lng: longitude });\r\n  //         setCurrentLocation({ lat: latitude, lng: longitude });\r\n  //       },\r\n  //       (error) => {\r\n  //         console.error(\"현재 위치를 가져올 수 없습니다.\", error);\r\n  //       }\r\n  //     );\r\n  //   } else {\r\n  //     console.error(\"위치 정보를 지원하지 않는 브라우저입니다.\");\r\n  //   }\r\n  // }, []);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <MapList\r\n        list={storeList}\r\n        onSelectItem={setSelectedItem}\r\n        // setCenter={setCenter}\r\n      />\r\n      <Maps\r\n        list={storeList}\r\n        selectedItem={selectedItem}\r\n        // center={center}\r\n        // setCenter={setCenter}\r\n        // currentLocation={currentLocation}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPage;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAClD;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEI,OAAA;IAAKM,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BR,OAAA,CAACF,OAAO;MACNW,IAAI,EAAEP,SAAU;MAChBQ,YAAY,EAAEL;MACd;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACFd,OAAA,CAACH,IAAI;MACHY,IAAI,EAAEP,SAAU;MAChBE,YAAY,EAAEA;MACd;MACA;MACA;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACX,EAAA,CAzCIF,OAAO;AAAAc,EAAA,GAAPd,OAAO;AA2Cb,eAAeA,OAAO;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}