{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\by_95\\\\Desktop\\\\2024\\\\Web_Programming\\\\ReBread\\\\pingpong\\\\frontend\\\\src\\\\components\\\\FlowAnimation.jsx\";\nimport React from \"react\";\nimport \"./FlowerAnimation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst breadImages = [\"res/images/mapMarker.png\", \"res/images/croissant.png\", \"res/images/bread.png\", \"res/images/meron_pan.png\", \"res/images/pretzel.png\"]; // Îπµ Ïù¥ÎØ∏ÏßÄ Í≤ΩÎ°ú Î¶¨Ïä§Ìä∏\n\nconst generateBreads = count => {\n  const breads = [];\n  for (let i = 0; i < count; i++) {\n    const randomImage = breadImages[Math.floor(Math.random() * breadImages.length)]; // ÎûúÎç§ Ïù¥ÎØ∏ÏßÄ ÏÑ†ÌÉù\n    const randomLeft = Math.random() * 100; // ÌôîÎ©¥ Í∞ÄÎ°ú ÏúÑÏπò (0~100%)\n    const randomSize = Math.random() * 20 + 30; // Îπµ ÌÅ¨Í∏∞ (30px ~ 50px)\n    const randomDuration = Math.random() * 5 + 6; // Ïï†ÎãàÎ©îÏù¥ÏÖò ÏÜçÎèÑ (6Ï¥à ~ 11Ï¥à)\n    const randomDelay = Math.random() * 3; // Ïï†ÎãàÎ©îÏù¥ÏÖò ÎîúÎ†àÏù¥ (0Ï¥à ~ 3Ï¥à)\n\n    breads.push(/*#__PURE__*/_jsxDEV(\"img\", {\n      src: randomImage,\n      alt: \"\\uBE75\",\n      className: \"bread\",\n      style: {\n        left: `${randomLeft}%`,\n        width: `${randomSize}px`,\n        animationDuration: `${randomDuration}s`,\n        animationDelay: `${randomDelay}s`\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this));\n  }\n  return breads;\n};\nconst BreadAnimation = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bread-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"\\uD769\\uB0A0\\uB9AC\\uB294 \\uBE75 \\uD83E\\uDD56\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), generateBreads(15), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = BreadAnimation;\nexport default BreadAnimation;\nvar _c;\n$RefreshReg$(_c, \"BreadAnimation\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","breadImages","generateBreads","count","breads","i","randomImage","Math","floor","random","length","randomLeft","randomSize","randomDuration","randomDelay","push","src","alt","className","style","left","width","animationDuration","animationDelay","fileName","_jsxFileName","lineNumber","columnNumber","BreadAnimation","children","_c","$RefreshReg$"],"sources":["C:/Users/by_95/Desktop/2024/Web_Programming/ReBread/pingpong/frontend/src/components/FlowAnimation.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./FlowerAnimation.css\";\r\n\r\nconst breadImages = [\r\n  \"res/images/mapMarker.png\",\r\n  \"res/images/croissant.png\",\r\n  \"res/images/bread.png\",\r\n  \"res/images/meron_pan.png\",\r\n  \"res/images/pretzel.png\",\r\n]; // Îπµ Ïù¥ÎØ∏ÏßÄ Í≤ΩÎ°ú Î¶¨Ïä§Ìä∏\r\n\r\nconst generateBreads = (count) => {\r\n  const breads = [];\r\n  for (let i = 0; i < count; i++) {\r\n    const randomImage =\r\n      breadImages[Math.floor(Math.random() * breadImages.length)]; // ÎûúÎç§ Ïù¥ÎØ∏ÏßÄ ÏÑ†ÌÉù\r\n    const randomLeft = Math.random() * 100; // ÌôîÎ©¥ Í∞ÄÎ°ú ÏúÑÏπò (0~100%)\r\n    const randomSize = Math.random() * 20 + 30; // Îπµ ÌÅ¨Í∏∞ (30px ~ 50px)\r\n    const randomDuration = Math.random() * 5 + 6; // Ïï†ÎãàÎ©îÏù¥ÏÖò ÏÜçÎèÑ (6Ï¥à ~ 11Ï¥à)\r\n    const randomDelay = Math.random() * 3; // Ïï†ÎãàÎ©îÏù¥ÏÖò ÎîúÎ†àÏù¥ (0Ï¥à ~ 3Ï¥à)\r\n\r\n    breads.push(\r\n      <img\r\n        key={i}\r\n        src={randomImage}\r\n        alt=\"Îπµ\"\r\n        className=\"bread\"\r\n        style={{\r\n          left: `${randomLeft}%`,\r\n          width: `${randomSize}px`,\r\n          animationDuration: `${randomDuration}s`,\r\n          animationDelay: `${randomDelay}s`,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  return breads;\r\n};\r\n\r\nconst BreadAnimation = () => {\r\n  return (\r\n    <div className=\"bread-container\">\r\n      <h1 className=\"title\">Ìù©ÎÇ†Î¶¨Îäî Îπµ ü•ñ</h1>\r\n      {generateBreads(15)} {/* Îπµ 15Í∞ú ÏÉùÏÑ± */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BreadAnimation;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,WAAW,GAAG,CAClB,0BAA0B,EAC1B,0BAA0B,EAC1B,sBAAsB,EACtB,0BAA0B,EAC1B,wBAAwB,CACzB,CAAC,CAAC;;AAEH,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAChC,MAAMC,MAAM,GAAG,EAAE;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,EAAEE,CAAC,EAAE,EAAE;IAC9B,MAAMC,WAAW,GACfL,WAAW,CAACM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGR,WAAW,CAACS,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/D,MAAMC,UAAU,GAAGJ,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IACxC,MAAMG,UAAU,GAAGL,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAC5C,MAAMI,cAAc,GAAGN,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9C,MAAMK,WAAW,GAAGP,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;IAEvCL,MAAM,CAACW,IAAI,cACTf,OAAA;MAEEgB,GAAG,EAAEV,WAAY;MACjBW,GAAG,EAAC,QAAG;MACPC,SAAS,EAAC,OAAO;MACjBC,KAAK,EAAE;QACLC,IAAI,EAAE,GAAGT,UAAU,GAAG;QACtBU,KAAK,EAAE,GAAGT,UAAU,IAAI;QACxBU,iBAAiB,EAAE,GAAGT,cAAc,GAAG;QACvCU,cAAc,EAAE,GAAGT,WAAW;MAChC;IAAE,GATGT,CAAC;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUP,CACH,CAAC;EACH;EACA,OAAOvB,MAAM;AACf,CAAC;AAED,MAAMwB,cAAc,GAAGA,CAAA,KAAM;EAC3B,oBACE5B,OAAA;IAAKkB,SAAS,EAAC,iBAAiB;IAAAW,QAAA,gBAC9B7B,OAAA;MAAIkB,SAAS,EAAC,OAAO;MAAAW,QAAA,EAAC;IAAS;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnCzB,cAAc,CAAC,EAAE,CAAC,EAAC,GAAC;EAAA;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV,CAAC;AAACG,EAAA,GAPIF,cAAc;AASpB,eAAeA,cAAc;AAAC,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}