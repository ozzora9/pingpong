{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\by_95\\\\Desktop\\\\2024\\\\Web_Programming\\\\ReBread\\\\pingpong\\\\frontend\\\\src\\\\pages\\\\MapPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Maps from \"../components/Maps\";\nimport MapList from \"../components/MapList\";\nimport \"../styles/MapList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapPage = ({\n  storeList\n}) => {\n  _s();\n  const [selectedItem, setSelectedItem] = useState();\n  const [center, setCenter] = useState({\n    lat: 37.4919681,\n    lng: 126.5813687\n  });\n  const [currentLocation, setCurrentLocation] = useState();\n  const [isLocationUpdated, setIsLocationUpdated] = useState(false); // 위치 갱신 여부\n\n  // 일정 범위 이상 차이날 때 currentLocation을 업데이트\n  const isLocationDifferent = () => {\n    const distanceThreshold = 0.0005; // 0.0005 degrees 정도 차이날 때 위치 갱신\n    const latDiff = Math.abs(center.lat - (currentLocation === null || currentLocation === void 0 ? void 0 : currentLocation.lat));\n    const lngDiff = Math.abs(center.lng - (currentLocation === null || currentLocation === void 0 ? void 0 : currentLocation.lng));\n    return latDiff > distanceThreshold || lngDiff > distanceThreshold;\n  };\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCenter({\n          lat: latitude,\n          lng: longitude\n        });\n        setCurrentLocation({\n          lat: latitude,\n          lng: longitude\n        });\n      }, error => {\n        console.error(\"현재 위치를 가져올 수 없습니다.\", error);\n      });\n    } else {\n      console.error(\"위치 정보를 지원하지 않는 브라우저입니다.\");\n    }\n  }, []);\n  const handleCurrentLocationClick = () => {\n    if (currentLocation) {\n      setCenter(currentLocation); // 현재 위치로 이동\n    }\n  };\n\n  // 화면상 표시된 위치가 내 위치와 일정 차이날 때 currentLocation 업데이트\n  useEffect(() => {\n    if (currentLocation && isLocationDifferent()) {\n      setCurrentLocation(center); // 현재 지도 중심이 내 위치와 다르면 업데이트\n      setIsLocationUpdated(true); // 위치 갱신된 플래그\n    } else {\n      setIsLocationUpdated(false); // 위치가 다르면 갱신하지 않음\n    }\n  }, [center, currentLocation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(MapList, {\n      list: storeList,\n      onSelectItem: setSelectedItem,\n      setCenter: setCenter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Maps, {\n      list: storeList,\n      selectedItem: selectedItem,\n      center: center,\n      setCenter: setCenter,\n      currentLocation: currentLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCurrentLocationClick,\n      style: {\n        position: \"absolute\",\n        bottom: \"20px\",\n        right: \"20px\",\n        zIndex: 1000,\n        padding: \"10px\",\n        backgroundColor: \"#fff\",\n        border: \"1px solid #ccc\",\n        borderRadius: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-location-crosshairs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), \" \\uD604\\uC7AC \\uC704\\uCE58\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(MapPage, \"JM8FQIe/MNwsNYzx7CDj1CmFaj8=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["useEffect","useState","Maps","MapList","jsxDEV","_jsxDEV","MapPage","storeList","_s","selectedItem","setSelectedItem","center","setCenter","lat","lng","currentLocation","setCurrentLocation","isLocationUpdated","setIsLocationUpdated","isLocationDifferent","distanceThreshold","latDiff","Math","abs","lngDiff","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","error","console","handleCurrentLocationClick","style","display","children","list","onSelectItem","fileName","_jsxFileName","lineNumber","columnNumber","onClick","bottom","right","zIndex","padding","backgroundColor","border","borderRadius","className","_c","$RefreshReg$"],"sources":["C:/Users/by_95/Desktop/2024/Web_Programming/ReBread/pingpong/frontend/src/pages/MapPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Maps from \"../components/Maps\";\r\nimport MapList from \"../components/MapList\";\r\nimport \"../styles/MapList.css\";\r\n\r\nconst MapPage = ({ storeList }) => {\r\n  const [selectedItem, setSelectedItem] = useState();\r\n  const [center, setCenter] = useState({\r\n    lat: 37.4919681,\r\n    lng: 126.5813687,\r\n  });\r\n  const [currentLocation, setCurrentLocation] = useState();\r\n  const [isLocationUpdated, setIsLocationUpdated] = useState(false); // 위치 갱신 여부\r\n\r\n  // 일정 범위 이상 차이날 때 currentLocation을 업데이트\r\n  const isLocationDifferent = () => {\r\n    const distanceThreshold = 0.0005; // 0.0005 degrees 정도 차이날 때 위치 갱신\r\n    const latDiff = Math.abs(center.lat - currentLocation?.lat);\r\n    const lngDiff = Math.abs(center.lng - currentLocation?.lng);\r\n    return latDiff > distanceThreshold || lngDiff > distanceThreshold;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          setCenter({ lat: latitude, lng: longitude });\r\n          setCurrentLocation({ lat: latitude, lng: longitude });\r\n        },\r\n        (error) => {\r\n          console.error(\"현재 위치를 가져올 수 없습니다.\", error);\r\n        }\r\n      );\r\n    } else {\r\n      console.error(\"위치 정보를 지원하지 않는 브라우저입니다.\");\r\n    }\r\n  }, []);\r\n\r\n  const handleCurrentLocationClick = () => {\r\n    if (currentLocation) {\r\n      setCenter(currentLocation); // 현재 위치로 이동\r\n    }\r\n  };\r\n\r\n  // 화면상 표시된 위치가 내 위치와 일정 차이날 때 currentLocation 업데이트\r\n  useEffect(() => {\r\n    if (currentLocation && isLocationDifferent()) {\r\n      setCurrentLocation(center); // 현재 지도 중심이 내 위치와 다르면 업데이트\r\n      setIsLocationUpdated(true); // 위치 갱신된 플래그\r\n    } else {\r\n      setIsLocationUpdated(false); // 위치가 다르면 갱신하지 않음\r\n    }\r\n  }, [center, currentLocation]);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", position: \"relative\" }}>\r\n      <MapList\r\n        list={storeList}\r\n        onSelectItem={setSelectedItem}\r\n        setCenter={setCenter}\r\n      />\r\n      <Maps\r\n        list={storeList}\r\n        selectedItem={selectedItem}\r\n        center={center}\r\n        setCenter={setCenter}\r\n        currentLocation={currentLocation}\r\n      />\r\n      <button\r\n        onClick={handleCurrentLocationClick}\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: \"20px\",\r\n          right: \"20px\",\r\n          zIndex: 1000,\r\n          padding: \"10px\",\r\n          backgroundColor: \"#fff\",\r\n          border: \"1px solid #ccc\",\r\n          borderRadius: \"5px\",\r\n        }}\r\n      >\r\n        <i className=\"fa-solid fa-location-crosshairs\"></i> 현재\r\n        위치로 돌아가기\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}