{"ast":null,"code":"import { useLayoutEffect } from 'react';\nimport { useMap } from '../hooks/useMap.js';\n\n/**\r\n * 추가적으로 보이고 싶은 지도 타입을 추가 할 때 사용한다.\r\n */\nconst MapTypeId = _ref => {\n  let {\n    type: _type\n  } = _ref;\n  const map = useMap(`MapTypeId`);\n  const type = typeof _type === \"string\" ? kakao.maps.MapTypeId[_type] : _type;\n  useLayoutEffect(() => {\n    map.addOverlayMapTypeId(type);\n    return () => {\n      map.removeOverlayMapTypeId(type);\n    };\n  }, [map, type]);\n  return null;\n};\nexport { MapTypeId };","map":{"version":3,"names":["useLayoutEffect","useMap","MapTypeId","_ref","type","_type","map","kakao","maps","addOverlayMapTypeId","removeOverlayMapTypeId"],"sources":["C:/Users/by_95/Desktop/2024/Web_Programming/ReBread/pingpong/frontend/node_modules/react-kakao-maps-sdk/esm/components/MapTypeId.js"],"sourcesContent":["import { useLayoutEffect } from 'react';\r\nimport { useMap } from '../hooks/useMap.js';\r\n\r\n/**\r\n * 추가적으로 보이고 싶은 지도 타입을 추가 할 때 사용한다.\r\n */\r\nconst MapTypeId = _ref => {\r\n  let {\r\n    type: _type\r\n  } = _ref;\r\n  const map = useMap(`MapTypeId`);\r\n  const type = typeof _type === \"string\" ? kakao.maps.MapTypeId[_type] : _type;\r\n  useLayoutEffect(() => {\r\n    map.addOverlayMapTypeId(type);\r\n    return () => {\r\n      map.removeOverlayMapTypeId(type);\r\n    };\r\n  }, [map, type]);\r\n  return null;\r\n};\r\n\r\nexport { MapTypeId };\r\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,oBAAoB;;AAE3C;AACA;AACA;AACA,MAAMC,SAAS,GAAGC,IAAI,IAAI;EACxB,IAAI;IACFC,IAAI,EAAEC;EACR,CAAC,GAAGF,IAAI;EACR,MAAMG,GAAG,GAAGL,MAAM,CAAC,WAAW,CAAC;EAC/B,MAAMG,IAAI,GAAG,OAAOC,KAAK,KAAK,QAAQ,GAAGE,KAAK,CAACC,IAAI,CAACN,SAAS,CAACG,KAAK,CAAC,GAAGA,KAAK;EAC5EL,eAAe,CAAC,MAAM;IACpBM,GAAG,CAACG,mBAAmB,CAACL,IAAI,CAAC;IAC7B,OAAO,MAAM;MACXE,GAAG,CAACI,sBAAsB,CAACN,IAAI,CAAC;IAClC,CAAC;EACH,CAAC,EAAE,CAACE,GAAG,EAAEF,IAAI,CAAC,CAAC;EACf,OAAO,IAAI;AACb,CAAC;AAED,SAASF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}