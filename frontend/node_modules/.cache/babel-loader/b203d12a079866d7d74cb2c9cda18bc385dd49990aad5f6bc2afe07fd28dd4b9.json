{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\by_95\\\\Desktop\\\\2024\\\\Web_Programming\\\\ReBread\\\\pingpong\\\\frontend\\\\src\\\\pages\\\\MapPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Maps from \"../components/Maps\";\nimport MapList from \"../components/MapList\";\nimport StoreModal from \"../components/StoreModal\";\nimport \"../styles/MapList.css\";\nimport \"../styles/StoreModal.css\";\nimport \"../styles/BreadRain.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst breadImg = [\"/res/images/croissant.png\"];\nconst generateBreads = count => {\n  const breads = [];\n  for (let i = 0; i < count; i++) {\n    const randomImage = breadImages[Math.floor(Math.random() * breadImages.length)];\n    const randomLeft = Math.random() * 100; // 랜덤 위치\n    const randomSize = Math.random() * 20 + 30; // 크기: 30px~50px\n    const randomDuration = Math.random() * 5 + 6; // 속도: 6~11초\n    const randomDelay = Math.random() * 3; // 딜레이: 0~3초\n    const randomRotate = Math.random() * 360; // 랜덤 회전 각도\n\n    breads.push(/*#__PURE__*/_jsxDEV(\"img\", {\n      src: randomImage,\n      alt: \"\\uBE75\",\n      className: \"bread\",\n      style: {\n        left: `${randomLeft}%`,\n        width: `${randomSize}px`,\n        animationDuration: `${randomDuration}s`,\n        animationDelay: `${randomDelay}s`,\n        \"--rotate\": `${randomRotate}deg` // 랜덤 회전\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this));\n  }\n  return breads;\n};\nconst MapPage = ({\n  storeList\n}) => {\n  _s();\n  const [selectedItem, setSelectedItem] = useState();\n  const [center, setCenter] = useState({\n    lat: 37.4919681,\n    lng: 126.5813687\n  });\n  const [currentLocation, setCurrentLocation] = useState();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalData, setModalData] = useState(null);\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCenter({\n          lat: latitude,\n          lng: longitude\n        });\n        setCurrentLocation({\n          lat: latitude,\n          lng: longitude\n        });\n      }, error => {\n        console.error(\"현재 위치를 가져올 수 없습니다.\", error);\n      });\n    } else {\n      console.error(\"위치 정보를 지원하지 않는 브라우저입니다.\");\n    }\n  }, []);\n  const handleOpenModal = store => {\n    setModalData(store);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setModalData(null);\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(MapList, {\n      list: storeList,\n      onSelectItem: setSelectedItem,\n      setCenter: setCenter,\n      onOpenModal: handleOpenModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Maps, {\n      list: storeList,\n      selectedItem: selectedItem,\n      center: center,\n      setCenter: setCenter,\n      currentLocation: currentLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(StoreModal, {\n      isOpen: isModalOpen,\n      onClose: handleCloseModal,\n      storeInfo: modalData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(MapPage, \"qaNm6qVfBE9v4mCiFDW60qqqpms=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["useEffect","useState","Maps","MapList","StoreModal","jsxDEV","_jsxDEV","breadImg","generateBreads","count","breads","i","randomImage","breadImages","Math","floor","random","length","randomLeft","randomSize","randomDuration","randomDelay","randomRotate","push","src","alt","className","style","left","width","animationDuration","animationDelay","fileName","_jsxFileName","lineNumber","columnNumber","MapPage","storeList","_s","selectedItem","setSelectedItem","center","setCenter","lat","lng","currentLocation","setCurrentLocation","isModalOpen","setIsModalOpen","modalData","setModalData","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","error","console","handleOpenModal","store","handleCloseModal","display","children","list","onSelectItem","onOpenModal","isOpen","onClose","storeInfo","_c","$RefreshReg$"],"sources":["C:/Users/by_95/Desktop/2024/Web_Programming/ReBread/pingpong/frontend/src/pages/MapPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Maps from \"../components/Maps\";\r\nimport MapList from \"../components/MapList\";\r\nimport StoreModal from \"../components/StoreModal\";\r\nimport \"../styles/MapList.css\";\r\nimport \"../styles/StoreModal.css\";\r\nimport \"../styles/BreadRain.css\";\r\n\r\nconst breadImg = [\"/res/images/croissant.png\"];\r\n\r\nconst generateBreads = (count) => {\r\n  const breads = [];\r\n  for (let i = 0; i < count; i++) {\r\n    const randomImage =\r\n      breadImages[Math.floor(Math.random() * breadImages.length)];\r\n    const randomLeft = Math.random() * 100; // 랜덤 위치\r\n    const randomSize = Math.random() * 20 + 30; // 크기: 30px~50px\r\n    const randomDuration = Math.random() * 5 + 6; // 속도: 6~11초\r\n    const randomDelay = Math.random() * 3; // 딜레이: 0~3초\r\n    const randomRotate = Math.random() * 360; // 랜덤 회전 각도\r\n\r\n    breads.push(\r\n      <img\r\n        key={i}\r\n        src={randomImage}\r\n        alt=\"빵\"\r\n        className=\"bread\"\r\n        style={{\r\n          left: `${randomLeft}%`,\r\n          width: `${randomSize}px`,\r\n          animationDuration: `${randomDuration}s`,\r\n          animationDelay: `${randomDelay}s`,\r\n          \"--rotate\": `${randomRotate}deg`, // 랜덤 회전\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  return breads;\r\n};\r\n\r\nconst MapPage = ({ storeList }) => {\r\n  const [selectedItem, setSelectedItem] = useState();\r\n  const [center, setCenter] = useState({\r\n    lat: 37.4919681,\r\n    lng: 126.5813687,\r\n  });\r\n  const [currentLocation, setCurrentLocation] = useState();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalData, setModalData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          setCenter({ lat: latitude, lng: longitude });\r\n          setCurrentLocation({ lat: latitude, lng: longitude });\r\n        },\r\n        (error) => {\r\n          console.error(\"현재 위치를 가져올 수 없습니다.\", error);\r\n        }\r\n      );\r\n    } else {\r\n      console.error(\"위치 정보를 지원하지 않는 브라우저입니다.\");\r\n    }\r\n  }, []);\r\n\r\n  const handleOpenModal = (store) => {\r\n    setModalData(store);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setModalData(null);\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <MapList\r\n        list={storeList}\r\n        onSelectItem={setSelectedItem}\r\n        setCenter={setCenter}\r\n        onOpenModal={handleOpenModal}\r\n      />\r\n      <Maps\r\n        list={storeList}\r\n        selectedItem={selectedItem}\r\n        center={center}\r\n        setCenter={setCenter}\r\n        currentLocation={currentLocation}\r\n      />\r\n      {isModalOpen && (\r\n        <StoreModal\r\n          isOpen={isModalOpen}\r\n          onClose={handleCloseModal}\r\n          storeInfo={modalData}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}