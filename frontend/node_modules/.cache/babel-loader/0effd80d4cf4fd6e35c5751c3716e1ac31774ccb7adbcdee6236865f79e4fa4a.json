{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\by_95\\\\Desktop\\\\2024\\\\Web_Programming\\\\ReBread\\\\pingpong\\\\frontend\\\\src\\\\components\\\\Modal.jsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Modal = () => {\n  _s();\n  const [modalOpen, setModalOpen] = useState(false);\n  const modalBackground = useRef();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-open-btn\",\n        onClick: () => setModalOpen(true),\n        children: \"\\uBAA8\\uB2EC \\uC5F4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-container\",\n      ref: modalBackground,\n      onClick: e => {\n        if (e.target === modalBackground.current) {\n          setModalOpen(false);\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB9AC\\uC561\\uD2B8\\uB85C \\uBAA8\\uB2EC \\uAD6C\\uD604\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modal-close-btn\",\n          onClick: () => setModalOpen(false),\n          children: \"\\uBAA8\\uB2EC \\uB2EB\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Modal, \"aLdyAGSGE9XKmoSZlZgbawdiKpA=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Modal","_s","modalOpen","setModalOpen","modalBackground","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","e","target","current","_c","$RefreshReg$"],"sources":["C:/Users/by_95/Desktop/2024/Web_Programming/ReBread/pingpong/frontend/src/components/Modal.jsx"],"sourcesContent":["import { useRef, useState } from \"react\";\r\n\r\nconst Modal = () => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const modalBackground = useRef();\r\n\r\n  return (\r\n    <>\r\n      <div className={\"btn-wrapper\"}>\r\n        <button\r\n          className={\"modal-open-btn\"}\r\n          onClick={() => setModalOpen(true)}\r\n        >\r\n          모달 열기\r\n        </button>\r\n      </div>\r\n      {modalOpen && (\r\n        <div\r\n          className={\"modal-container\"}\r\n          ref={modalBackground}\r\n          onClick={(e) => {\r\n            if (e.target === modalBackground.current) {\r\n              setModalOpen(false);\r\n            }\r\n          }}\r\n        >\r\n          <div className={\"modal-content\"}>\r\n            <p>리액트로 모달 구현하기</p>\r\n            <button\r\n              className={\"modal-close-btn\"}\r\n              onClick={() => setModalOpen(false)}\r\n            >\r\n              모달 닫기\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMS,eAAe,GAAGV,MAAM,CAAC,CAAC;EAEhC,oBACEG,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA;MAAKS,SAAS,EAAE,aAAc;MAAAD,QAAA,eAC5BR,OAAA;QACES,SAAS,EAAE,gBAAiB;QAC5BC,OAAO,EAAEA,CAAA,KAAMJ,YAAY,CAAC,IAAI,CAAE;QAAAE,QAAA,EACnC;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACLT,SAAS,iBACRL,OAAA;MACES,SAAS,EAAE,iBAAkB;MAC7BM,GAAG,EAAER,eAAgB;MACrBG,OAAO,EAAGM,CAAC,IAAK;QACd,IAAIA,CAAC,CAACC,MAAM,KAAKV,eAAe,CAACW,OAAO,EAAE;UACxCZ,YAAY,CAAC,KAAK,CAAC;QACrB;MACF,CAAE;MAAAE,QAAA,eAEFR,OAAA;QAAKS,SAAS,EAAE,eAAgB;QAAAD,QAAA,gBAC9BR,OAAA;UAAAQ,QAAA,EAAG;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACnBd,OAAA;UACES,SAAS,EAAE,iBAAkB;UAC7BC,OAAO,EAAEA,CAAA,KAAMJ,YAAY,CAAC,KAAK,CAAE;UAAAE,QAAA,EACpC;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA,eACD,CAAC;AAEP,CAAC;AAACV,EAAA,CArCID,KAAK;AAAAgB,EAAA,GAALhB,KAAK;AAuCX,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}